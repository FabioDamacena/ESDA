# Converte para maiusculo
shp_pr_municipios@data <- shp_pr_municipios@data %>%
mutate_if(is.character, toupper)
# Verificando o join:
shp_pr_municipios@data %>%
kable() %>%
kable_styling(bootstrap_options = "striped",
full_width = TRUE,
font_size = 12)
# FUNCTION TO REMOVE NA's IN sp DataFrame OBJECT
#   x           sp spatial DataFrame object
#   margin      Remove rows (1) or columns (2)
sp.na.omit <- function(x, margin=1) {
if (!inherits(x, "SpatialPointsDataFrame") & !inherits(x, "SpatialPolygonsDataFrame"))
stop("MUST BE sp SpatialPointsDataFrame OR SpatialPolygonsDataFrame CLASS OBJECT")
na.index <- unique(as.data.frame(which(is.na(x@data),arr.ind=TRUE))[,margin])
if(margin == 1) {
cat("DELETING ROWS: ", na.index, "\n")
return( x[-na.index,]  )
}
if(margin == 2) {
cat("DELETING COLUMNS: ", na.index, "\n")
return( x[,-na.index]  )
}
}
# DELETE NA's IN meuse AND SHOW CHANGE IN dim
shp_pr_municipios <- sp.na.omit(shp_pr_municipios)
vizinhos_queen <- poly2nb(pl = shp_pr_municipios,
queen = TRUE,
row.names = shp_pr_municipios@data$NM_MUN)
matrizW_queen <- nb2mat(neighbours = vizinhos_queen,
style = "B",
zero.policy = TRUE)
colnames(matrizW_queen) <- shp_pr_municipios@data$NM_MUN
matrizW_queen_linha <- nb2mat(vizinhos_queen,
style = "W",
zero.policy = TRUE)
colnames(matrizW_queen_linha) <- rownames(matrizW_queen_linha)
listw_queen <- mat2listw(matrizW_queen_linha)
class(listw_queen)
names(dados_pr)
moran.test(x = shp_pr_municipios@data$percentual,
listw = listw_queen,
zero.policy = TRUE)
# O Diagrama da Estatística I de Moran
moran.plot(x = shp_pr_municipios@data$percentual,
listw = listw_queen,
zero.policy = TRUE,
xlab = "Rec.TribxRec.Tot",
ylab = "Rec.TribxRec.Tot Espacialmente Defasado",
pch = 19)
vizinhos_queen <- poly2nb(pl = shp_pr_municipios,
queen = TRUE,
row.names = shp_pr_municipios@data$NM_MUN)
matrizW_queen_linha <- nb2mat(vizinhos_queen,
style = "W",
zero.policy = TRUE)
listw_queen_local <- mat2listw(matrizW_queen_linha)
moran_local <- localmoran(x = shp_pr_municipios@data$percentual,
listw = listw_queen_local,
zero.policy = TRUE)
moran_local_mapa <- cbind(shp_pr_municipios, moran_local)
quantile(moran_local_mapa@data$Ii, type = 5, probs = c(0,0.2,0.4,0.6,0.8))
moran_local_mapa@data <- moran_local_mapa@data %>%
mutate(faixa_quantis = factor(quantcut(x = Ii, q = 5)))
attr(x = moran_local, which = "quadr")
moran_local_mapa <- cbind(moran_local_mapa,
attr(x = moran_local, which = "quadr")[1])
tm_shape(shp = moran_local_mapa) +
tm_fill(col = "mean", palette = "-viridis") +
tm_borders(col = "gray")
vizinhos_queen <- poly2nb(pl = shp_pr_municipios,
queen = TRUE,
row.names = shp_pr_municipios@data$NM_MUN)
matrizW_queen_linha <- nb2mat(vizinhos_queen,
style = "W",
zero.policy = TRUE)
moran_local <- localmoran(x = shp_pr_municipios@data$percentual,
listw = listw_queen_local,
zero.policy = TRUE)
quadrantes <- vector(mode = "numeric", length = nrow(moran_local))
centro <- shp_pr_municipios@data$percentual - mean(shp_pr_municipios@data$percentual)
centro_moran_local <- moran_local[,1] - mean(moran_local[,1])
sig <- 0.05
quadrantes[centro > 0 & centro_moran_local > 0] <- "HH"
quadrantes[centro > 0 & centro_moran_local < 0] <- "HL"
quadrantes[centro < 0 & centro_moran_local > 0] <- "LH"
quadrantes[centro < 0 & centro_moran_local < 0] <- "LL"
quadrantes[moran_local[,5] > sig] <- "Estatisticamente_nao_significante"
moran_local_mapa <- cbind(shp_pr_municipios, moran_local)
moran_local_mapa@data["quadrantes"] <- factor(quadrantes)
tm_shape(shp = moran_local_mapa) +
tm_polygons(col = "quadrantes",
pal = c(HH = "darkred",
HL = "red",
LH = "lightblue",
LL = "darkblue",
Estatisticamente_nao_significante = "white")) +
tm_layout(legend.outside = TRUE)
moran_local_mapa@data$quadrantes
LL <- filter(moran_local_mapa@data$quadrantes =="LL")
LL <- moran_local_mapa@data
View(LL)
LL <- LL %>% filter(quadrantes == "LL")
View(LL)
dados <- moran_local_mapa@data
LL <- dados %>% filter(quadrantes == "LL")
LH <- dados %>% filter(quadrantes == "LH")
View(LH)
HH <- dados %>% filter(quadrantes == "HH")
HL <- dados %>% filter(quadrantes == "HL")
View(HL)
View(HH)
vizinhos_distancias <- dnearneigh(coordinates(shp_pr_municipios),
d1 = 0,
d2 = 60,
longlat = TRUE)
summary(vizinhos_distancias)
shp_pr_municipios@data$NM_MUN[206]
matrizW_distancias <- nb2mat(neighbours = vizinhos_distancias,
style = "W",
zero.policy = T)
colnames(matrizW_distancias) <- shp_pr_municipios@data$NM_MUN
rownames(matrizW_distancias) <- shp_pr_municipios@data$NM_MUN
listw_dist <- mat2listw(x = matrizW_distancias)
g_local <- localG(x = shp_pr_municipios@data$percentual,
listw = listw_dist)
mapa_G <- cbind(shp_pr_municipios, as.matrix(g_local))
View(mapa_G)
mapa_G@data %>%
rename(estistica_g = 10) -> mapa_G@data
mapa_G@data <- mapa_G@data %>%
mutate(faixa_quantis = factor(quantcut(x = estistica_g, q = 8)))
tm_shape(mapa_G) +
tm_fill("faixa_quantis",
palette = "-RdBu") +
tm_borders() +
tm_layout(legend.text.size = 0.7,
legend.title.size = 0.9,
frame = F,
main.title = "Rec.TribxRec.Tot",
legend.outside = TRUE)
tm_shape(mapa_G) +
tm_fill("faixa_quantis",
palette = "-RdBu") +
tm_borders() +
tm_layout(legend.text.size = 0.7,
legend.title.size = 0.9,
frame = F,
main.title = "Estatística G em função do percentual de votos em Bolsonaro",
legend.outside = TRUE)
pacotes <- c("rgdal","raster","tmap","maptools","tidyverse","broom","knitr",
"kableExtra","RColorBrewer", "spdep","gtools","readxl")
if(sum(as.numeric(!pacotes %in% installed.packages())) != 0){
instalador <- pacotes[!pacotes %in% installed.packages()]
for(i in 1:length(instalador)) {
install.packages(instalador, dependencies = T)
break()}
sapply(pacotes, require, character = T)
} else {
sapply(pacotes, require, character = T)
}
shp_pr_municipios <- readOGR(dsn = "PR_Municipios_2020",
layer = "PR_Municipios_2020",
encoding = "UTF8",
use_iconv = TRUE)
dados_pr <- read.csv("PR2022.csv")
names(dados_pr)
dados_pr <- dados_pr %>% rename(NM_MUN = "NM_MUNICIPIO")
# normaliza strings
# Converte para minusculo para conseguir compatibilizar observações de ambos os dataframes
dados_pr <- dados_pr %>%
mutate_if(is.character, tolower)
shp_pr_municipios@data <- shp_pr_municipios@data %>%
mutate_if(is.character, tolower)
shp_pr_municipios@data
shp_pr_municipios@data %>%
left_join(dados_pr, by = "NM_MUN") -> shp_pr_municipios@data
# Converte para maiusculo
shp_pr_municipios@data <- shp_pr_municipios@data %>%
mutate_if(is.character, toupper)
# Verificando o join:
shp_pr_municipios@data %>%
kable() %>%
kable_styling(bootstrap_options = "striped",
full_width = TRUE,
font_size = 12)
# FUNCTION TO REMOVE NA's IN sp DataFrame OBJECT
#   x           sp spatial DataFrame object
#   margin      Remove rows (1) or columns (2)
sp.na.omit <- function(x, margin=1) {
if (!inherits(x, "SpatialPointsDataFrame") & !inherits(x, "SpatialPolygonsDataFrame"))
stop("MUST BE sp SpatialPointsDataFrame OR SpatialPolygonsDataFrame CLASS OBJECT")
na.index <- unique(as.data.frame(which(is.na(x@data),arr.ind=TRUE))[,margin])
if(margin == 1) {
cat("DELETING ROWS: ", na.index, "\n")
return( x[-na.index,]  )
}
if(margin == 2) {
cat("DELETING COLUMNS: ", na.index, "\n")
return( x[,-na.index]  )
}
}
# DELETE NA's IN meuse AND SHOW CHANGE IN dim
shp_pr_municipios <- sp.na.omit(shp_pr_municipios)
shp_pr_municipios <- readOGR(dsn = "PR_Municipios_2020",
layer = "PR_Municipios_2020",
encoding = "UTF8",
use_iconv = TRUE)
shp_pr_municipios@data[16]
shp_pr_municipios@data$NM_MUN[16]
shp_pr_municipios@data$NM_MUN[98]
shp_pr_municipios@data$NM_MUN[159]
shp_pr_municipios@data$NM_MUN[263]
shp_pr_municipios@data$NM_MUN[297]
shp_pr_municipios@data$NM_MUN[335]
shp_pr_municipios@data$NM_MUN[345]
pacotes <- c("rgdal","raster","tmap","maptools","tidyverse","broom","knitr",
"kableExtra","RColorBrewer", "spdep","gtools","readxl")
if(sum(as.numeric(!pacotes %in% installed.packages())) != 0){
instalador <- pacotes[!pacotes %in% installed.packages()]
for(i in 1:length(instalador)) {
install.packages(instalador, dependencies = T)
break()}
sapply(pacotes, require, character = T)
} else {
sapply(pacotes, require, character = T)
}
shp_pr_municipios <- readOGR(dsn = "PR_Municipios_2020",
layer = "PR_Municipios_2020",
encoding = "UTF8",
use_iconv = TRUE)
dados_pr <- read.csv("PR2022.csv")
names(dados_pr)
dados_pr <- dados_pr %>% rename(NM_MUN = "NM_MUNICIPIO")
View(dados_pr)
shp_pr_municipios <- readOGR(dsn = "PR_Municipios_2020",
layer = "PR_Municipios_2020",
encoding = "UTF8",
use_iconv = TRUE)
dados_pr <- read.csv("PR2022.csv")
dados_pr <- read.csv("PR2022.csv", sep = ",")
library(tidyverse)
df <- read.csv("votacao_secao_2022_BR.csv", sep = ";", encoding = "Latin 1")
df <- df %>% filter(SG_UF == "PR")
df <- df %>% select(CD_MUNICIPIO, NM_MUNICIPIO, NR_ZONA, NR_SECAO,
NM_VOTAVEL, QT_VOTOS)
library(tidyverse)
df <- read.csv("votacao_secao_2022_BR.csv", sep = ";", encoding = "Latin 1")
df <- df %>% filter(SG_UF == "PR")
df <- df %>% select(CD_MUNICIPIO, NM_MUNICIPIO, NR_ZONA, NR_SECAO,
NM_VOTAVEL, QT_VOTOS)
df = df %>% group_by(NM_MUNICIPIO, NM_VOTAVEL) %>%
summarise(votos = sum(QT_VOTOS, na.rm=TRUE)) %>%
ungroup () %>% droplevels(.) %>% arrange(NM_MUNICIPIO)
votos_municipio = df %>% group_by(NM_MUNICIPIO) %>%
summarise(votos = sum(votos, na.rm=TRUE)) %>%
ungroup () %>% droplevels(.) %>% arrange(NM_MUNICIPIO)
df <- df %>% filter(NM_VOTAVEL == "JAIR MESSIAS BOLSONARO")
names(df)[3] <- "votos_bolsonaro"
names(votos_municipio)[1] <- "municipio"
df_total <- cbind(df, votos_municipio)
df_total <- df_total %>% select(NM_MUNICIPIO, NM_VOTAVEL, votos_bolsonaro, votos)
df_total$percentual <- df_total$votos_bolsonaro / df_total$votos
write.csv(df_total,file='PR2022.csv')
View(df_total)
pacotes <- c("rgdal","raster","tmap","maptools","tidyverse","broom","knitr",
"kableExtra","RColorBrewer", "spdep","gtools","readxl")
if(sum(as.numeric(!pacotes %in% installed.packages())) != 0){
instalador <- pacotes[!pacotes %in% installed.packages()]
for(i in 1:length(instalador)) {
install.packages(instalador, dependencies = T)
break()}
sapply(pacotes, require, character = T)
} else {
sapply(pacotes, require, character = T)
}
shp_pr_municipios <- readOGR(dsn = "PR_Municipios_2020",
layer = "PR_Municipios_2020",
encoding = "UTF8",
use_iconv = TRUE)
dados_pr <- read.csv("PR2022.csv")
View(dados_pr)
names(dados_pr)
dados_pr <- dados_pr %>% rename(NM_MUN = "NM_MUNICIPIO")
View(dados_pr)
shp_pr_municipios@data$NM_MUN[16] <- "Antonio Olinto"
shp_pr_municipios@data$NM_MUN[98]
shp_pr_municipios@data$NM_MUN[98] <- "Diamante d Oeste"
shp_pr_municipios@data$NM_MUN[159] <- "Itapejara d Oeste"
shp_pr_municipios@data$NM_MUN[263] <- "Pérola d Oeste"
shp_pr_municipios@data$NM_MUN[297] <- "Rancho Alegre d Oeste"
shp_pr_municipios@data$NM_MUN[335] <- "Santo Antonio do Caiuá"
shp_pr_municipios@data$NM_MUN[345] <- "São Jorge d Oeste"
names(dados_pr)
dados_pr <- dados_pr %>% rename(NM_MUN = "NM_MUNICIPIO")
pacotes <- c("rgdal","raster","tmap","maptools","tidyverse","broom","knitr",
"kableExtra","RColorBrewer", "spdep","gtools","readxl")
if(sum(as.numeric(!pacotes %in% installed.packages())) != 0){
instalador <- pacotes[!pacotes %in% installed.packages()]
for(i in 1:length(instalador)) {
install.packages(instalador, dependencies = T)
break()}
sapply(pacotes, require, character = T)
} else {
sapply(pacotes, require, character = T)
}
shp_pr_municipios <- readOGR(dsn = "PR_Municipios_2020",
layer = "PR_Municipios_2020",
encoding = "UTF8",
use_iconv = TRUE)
dados_pr <- read.csv("PR2022.csv")
View(dados_pr)
shp_pr_municipios@data$NM_MUN[16] <- "Antonio Olinto"
shp_pr_municipios@data$NM_MUN[98] <- "Diamante d Oeste"
shp_pr_municipios@data$NM_MUN[159] <- "Itapejara d Oeste"
shp_pr_municipios@data$NM_MUN[263] <- "Pérola d Oeste"
shp_pr_municipios@data$NM_MUN[297] <- "Rancho Alegre d Oeste"
shp_pr_municipios@data$NM_MUN[335] <- "Santo Antonio do Caiuá"
shp_pr_municipios@data$NM_MUN[345] <- "São Jorge d Oeste"
names(dados_pr)
dados_pr <- dados_pr %>% rename(NM_MUN = "NM_MUNICIPIO")
# normaliza strings
# Converte para minusculo para conseguir compatibilizar observações de ambos os dataframes
dados_pr <- dados_pr %>%
mutate_if(is.character, tolower)
shp_pr_municipios@data <- shp_pr_municipios@data %>%
mutate_if(is.character, tolower)
shp_pr_municipios@data %>%
left_join(dados_pr, by = "NM_MUN") -> shp_pr_municipios@data
# Converte para maiusculo
shp_pr_municipios@data <- shp_pr_municipios@data %>%
mutate_if(is.character, toupper)
# Verificando o join:
shp_pr_municipios@data %>%
kable() %>%
kable_styling(bootstrap_options = "striped",
full_width = TRUE,
font_size = 12)
# FUNCTION TO REMOVE NA's IN sp DataFrame OBJECT
#   x           sp spatial DataFrame object
#   margin      Remove rows (1) or columns (2)
sp.na.omit <- function(x, margin=1) {
if (!inherits(x, "SpatialPointsDataFrame") & !inherits(x, "SpatialPolygonsDataFrame"))
stop("MUST BE sp SpatialPointsDataFrame OR SpatialPolygonsDataFrame CLASS OBJECT")
na.index <- unique(as.data.frame(which(is.na(x@data),arr.ind=TRUE))[,margin])
if(margin == 1) {
cat("DELETING ROWS: ", na.index, "\n")
return( x[-na.index,]  )
}
if(margin == 2) {
cat("DELETING COLUMNS: ", na.index, "\n")
return( x[,-na.index]  )
}
}
# DELETE NA's IN meuse AND SHOW CHANGE IN dim
shp_pr_municipios <- sp.na.omit(shp_pr_municipios)
vizinhos_queen <- poly2nb(pl = shp_pr_municipios,
queen = TRUE,
row.names = shp_pr_municipios@data$NM_MUN)
pacotes <- c("rgdal","raster","tmap","maptools","tidyverse","broom","knitr",
"kableExtra","RColorBrewer", "spdep","gtools","readxl")
instalador <- pacotes[!pacotes %in% installed.packages()]
if(sum(as.numeric(!pacotes %in% installed.packages())) != 0){
instalador <- pacotes[!pacotes %in% installed.packages()]
for(i in 1:length(instalador)) {
install.packages(instalador, dependencies = T)
break()}
sapply(pacotes, require, character = T)
} else {
sapply(pacotes, require, character = T)
}
shp_pr_municipios <- readOGR(dsn = "PR_Municipios_2020",
layer = "PR_Municipios_2020",
encoding = "UTF8",
use_iconv = TRUE)
dados_pr <- read.csv("PR2022.csv")
shp_pr_municipios@data$NM_MUN[16] <- "Antonio Olinto"
shp_pr_municipios@data$NM_MUN[98] <- "Diamante d Oeste"
shp_pr_municipios@data$NM_MUN[159] <- "Itapejara d Oeste"
shp_pr_municipios@data$NM_MUN[263] <- "Pérola d Oeste"
shp_pr_municipios@data$NM_MUN[297] <- "Rancho Alegre d Oeste"
shp_pr_municipios@data$NM_MUN[335] <- "Santo Antonio do Caiuá"
shp_pr_municipios@data$NM_MUN[345] <- "São Jorge d Oeste"
names(dados_pr)
dados_pr <- dados_pr %>% rename(NM_MUN = "NM_MUNICIPIO")
# normaliza strings
# Converte para minusculo para conseguir compatibilizar observações de ambos os dataframes
dados_pr <- dados_pr %>%
mutate_if(is.character, tolower)
shp_pr_municipios@data <- shp_pr_municipios@data %>%
mutate_if(is.character, tolower)
shp_pr_municipios@data %>%
left_join(dados_pr, by = "NM_MUN") -> shp_pr_municipios@data
# Converte para maiusculo
shp_pr_municipios@data <- shp_pr_municipios@data %>%
mutate_if(is.character, toupper)
# Verificando o join:
shp_pr_municipios@data %>%
kable() %>%
kable_styling(bootstrap_options = "striped",
full_width = TRUE,
font_size = 12)
vizinhos_queen <- poly2nb(pl = shp_pr_municipios,
queen = TRUE,
row.names = shp_pr_municipios@data$NM_MUN)
matrizW_queen <- nb2mat(neighbours = vizinhos_queen,
style = "B",
zero.policy = TRUE)
colnames(matrizW_queen) <- shp_pr_municipios@data$NM_MUN
matrizW_queen_linha <- nb2mat(vizinhos_queen,
style = "W",
zero.policy = TRUE)
colnames(matrizW_queen_linha) <- rownames(matrizW_queen_linha)
listw_queen <- mat2listw(matrizW_queen_linha)
class(listw_queen)
names(dados_pr)
moran.test(x = shp_pr_municipios@data$percentual,
listw = listw_queen,
zero.policy = TRUE)
# O Diagrama da Estatística I de Moran
moran.plot(x = shp_pr_municipios@data$percentual,
listw = listw_queen,
zero.policy = TRUE,
xlab = "Rec.TribxRec.Tot",
ylab = "Rec.TribxRec.Tot Espacialmente Defasado",
pch = 19)
vizinhos_queen <- poly2nb(pl = shp_pr_municipios,
queen = TRUE,
row.names = shp_pr_municipios@data$NM_MUN)
matrizW_queen_linha <- nb2mat(vizinhos_queen,
style = "W",
zero.policy = TRUE)
listw_queen_local <- mat2listw(matrizW_queen_linha)
moran_local <- localmoran(x = shp_pr_municipios@data$percentual,
listw = listw_queen_local,
zero.policy = TRUE)
moran_local_mapa <- cbind(shp_pr_municipios, moran_local)
quantile(moran_local_mapa@data$Ii, type = 5, probs = c(0,0.2,0.4,0.6,0.8))
moran_local_mapa@data <- moran_local_mapa@data %>%
mutate(faixa_quantis = factor(quantcut(x = Ii, q = 5)))
attr(x = moran_local, which = "quadr")
moran_local_mapa <- cbind(moran_local_mapa,
attr(x = moran_local, which = "quadr")[1])
tm_shape(shp = moran_local_mapa) +
tm_fill(col = "mean", palette = "-viridis") +
tm_borders(col = "gray")
vizinhos_queen <- poly2nb(pl = shp_pr_municipios,
queen = TRUE,
row.names = shp_pr_municipios@data$NM_MUN)
matrizW_queen_linha <- nb2mat(vizinhos_queen,
style = "W",
zero.policy = TRUE)
listw_queen_local <- mat2listw(matrizW_queen_linha)
moran_local <- localmoran(x = shp_pr_municipios@data$percentual,
listw = listw_queen_local,
zero.policy = TRUE)
quadrantes <- vector(mode = "numeric", length = nrow(moran_local))
centro <- shp_pr_municipios@data$percentual - mean(shp_pr_municipios@data$percentual)
centro_moran_local <- moran_local[,1] - mean(moran_local[,1])
sig <- 0.05
quadrantes[centro > 0 & centro_moran_local > 0] <- "HH"
quadrantes[centro > 0 & centro_moran_local < 0] <- "HL"
quadrantes[centro < 0 & centro_moran_local > 0] <- "LH"
quadrantes[centro < 0 & centro_moran_local < 0] <- "LL"
quadrantes[moran_local[,5] > sig] <- "Estatisticamente_nao_significante"
moran_local_mapa <- cbind(shp_pr_municipios, moran_local)
moran_local_mapa@data["quadrantes"] <- factor(quadrantes)
tm_shape(shp = moran_local_mapa) +
tm_polygons(col = "quadrantes",
pal = c(HH = "darkred",
HL = "red",
LH = "lightblue",
LL = "darkblue",
Estatisticamente_nao_significante = "white")) +
tm_layout(legend.outside = TRUE)
dados <- moran_local_mapa@data
LL <- dados %>% filter(quadrantes == "LL")
LH <- dados %>% filter(quadrantes == "LH")
HH <- dados %>% filter(quadrantes == "HH")
HL <- dados %>% filter(quadrantes == "HL")
View(HH)
vizinhos_distancias <- dnearneigh(coordinates(shp_pr_municipios),
d1 = 0,
d2 = 60,
longlat = TRUE)
summary(vizinhos_distancias)
shp_pr_municipios@data$NM_MUN[206]
matrizW_distancias <- nb2mat(neighbours = vizinhos_distancias,
style = "W",
zero.policy = T)
colnames(matrizW_distancias) <- shp_pr_municipios@data$NM_MUN
rownames(matrizW_distancias) <- shp_pr_municipios@data$NM_MUN
listw_dist <- mat2listw(x = matrizW_distancias)
shp_pr_municipios@data$NM_MUN[209]
listw_dist <- mat2listw(x = matrizW_distancias)
g_local <- localG(x = shp_pr_municipios@data$percentual,
listw = listw_dist)
mapa_G <- cbind(shp_pr_municipios, as.matrix(g_local))
mapa_G@data %>%
rename(estistica_g = 10) -> mapa_G@data
mapa_G@data <- mapa_G@data %>%
mutate(faixa_quantis = factor(quantcut(x = estistica_g, q = 8)))
tm_shape(mapa_G) +
tm_fill("faixa_quantis",
palette = "-RdBu") +
tm_borders() +
tm_layout(legend.text.size = 0.7,
legend.title.size = 0.9,
frame = F,
main.title = "Estatística G em função do percentual de votos em Bolsonaro",
legend.outside = TRUE)
