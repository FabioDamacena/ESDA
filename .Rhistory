glimpse(dados_pr)
shp_pr_municipios@data %>%
left_join(dados_pr, by = "CD_MUN") -> shp_pr_municipios@data
# Verificando o join:
shp_pr_municipios@data %>%
kable() %>%
kable_styling(bootstrap_options = "striped",
full_width = TRUE,
font_size = 12)
View(dados_pr)
shp_pr_municipios <- readOGR(dsn = "PR_Municipios_2020",
layer = "PR_Municipios_2020",
encoding = "UTF8",
use_iconv = TRUE)
shp_pr_municipios@data %>%
left_join(dados_pr, by = "CD_MUN") -> shp_pr_municipios@data
# Verificando o join:
shp_pr_municipios@data %>%
kable() %>%
kable_styling(bootstrap_options = "striped",
full_width = TRUE,
font_size = 12)
moran.test(x = shp_pr_municipios@data$`IDHM 2010`,
listw = listw_queen,
zero.policy = TRUE)
shp_pr_municipios@data
# O Diagrama da Estat?stica I de Moran
moran.plot(x = shp_pr_municipios@data$idhm_2010,
listw = listw_queen,
zero.policy = TRUE,
xlab = "IDH",
ylab = "IDH Espacialmente Defasado",
pch = 19)
moran.test(x = shp_pr_municipios@data$idhm_2010,
listw = listw_queen,
zero.policy = TRUE)
2.2e-16
matrizW_queen_linha <- nb2mat(vizinhos_queen,
style = "W",
zero.policy = TRUE)
# Considerando a variável idh do objeto PR_dados, podemos aferir sua Estatística
# Moran Local, com o uso da função localmoran(), como se segue:
moran_local <- localmoran(x = shp_pr_municipios@data$idhm_2010,
listw = listw_queen,
zero.policy = TRUE)
moran_local_mapa <- cbind(shp_pr_municipios, moran_local)
quantile(moran_local_mapa@data$Ii, type = 5, probs = c(0,0.2,0.4,0.6,0.8))
moran_local_mapa@data <- moran_local_mapa@data %>%
mutate(faixa_quantis = factor(quantcut(x = Ii, q = 5)))
tm_shape(shp = moran_local_mapa) +
tm_fill(col = "faixa_quantis", palette = "-magma") +
tm_borders()
attr(x = moran_local, which = "quadr")
tm_shape(shp = moran_local_mapa) +
tm_fill(col = "mean", palette = "-viridis") +
tm_borders(col = "gray")
moran_local_mapa <- cbind(moran_local_mapa,
attr(x = moran_local, which = "quadr")[1])
tm_shape(shp = moran_local_mapa) +
tm_fill(col = "mean", palette = "-viridis") +
tm_borders(col = "gray")
quadrantes <- vector(mode = "numeric", length = nrow(moran_local))
centro_idh <- shp_pr_municipios@data$idhm_2010 - mean(shp_pr_municipios@data$idhm_2010)
centro_moran_local <- moran_local[,1] - mean(moran_local[,1])
sig <- 0.05
quadrantes[centro_idh > 0 & centro_moran_local > 0] <- "HH"
quadrantes[centro_idh > 0 & centro_moran_local < 0] <- "HL"
quadrantes[centro_idh < 0 & centro_moran_local > 0] <- "LH"
quadrantes[centro_idh < 0 & centro_moran_local < 0] <- "LL"
quadrantes[moran_local[,5] > sig] <- "Estatisticamente_nao_significante"
moran_local_mapa@data["quadrantes"] <- factor(quadrantes)
tm_shape(shp = moran_local_mapa) +
tm_polygons(col = "quadrantes",
pal = c(HH = "darkred",
HL = "red",
LH = "lightblue",
LL = "darkblue",
Estatisticamente_nao_significante = "white")) +
tm_borders()
summary(vizinhos_distancias)
vizinhos_distancias <- dnearneigh(coordinates(shp_pr_municipios),
d1 = 0,
d2 = 30,
longlat = TRUE)
summary(vizinhos_distancias)
plot(shp_pr_municipios, border = "lightgray")
plot(vizinhos_distancias,
coordinates(shp_pr_municipios),
add = TRUE,
col = "#CC6A70FF")
matrizW_distancias <- nb2mat(neighbours = vizinhos_distancias,
style = "B",
zero.policy = T)
colnames(matrizW_distancias) <- shp_pr_municipios@data$NM_MUN
rownames(matrizW_distancias) <- shp_pr_municipios@data$NM_MUN
listw_dist <- mat2listw(x = matrizW_distancias)
g_local <- localG(x = shp_pr_municipios@data$idhm_2010,
listw = listw_dist)
mapa_G <- cbind(shp_pr_municipios, as.matrix(g_local))
tm_shape(mapa_G) +
tm_fill("faixa_quantis",
palette = "-RdBu") +
tm_borders()
mapa_G@data %>%
rename(estistica_g = 4) -> mapa_G@data
tm_shape(mapa_G) +
tm_fill("faixa_quantis",
palette = "-RdBu") +
tm_borders()
g_local <- localG(x = shp_pr_municipios@data$idhm_2010,
listw = listw_dist)
mapa_G <- cbind(shp_pr_municipios, as.matrix(g_local))
mapa_G@data %>%
rename(estistica_g = 20) -> mapa_G@data
tm_shape(mapa_G) +
tm_fill("faixa_quantis",
palette = "-RdBu") +
tm_borders()
tm_shape(mapa_G) +
tm_fill("estistica_g",
palette = "-viridis") +
tm_borders()
mapa_G@data <- mapa_G@data %>%
mutate(faixa_quantis = factor(quantcut(x = estistica_g, q = 8)))
tm_shape(mapa_G) +
tm_fill("faixa_quantis",
palette = "-RdBu") +
tm_borders()
tm_shape(mapa_G) +
tm_fill("faixa_quantis",
palette = "plasma") +
tm_borders()
pacotes <- c("rgdal","raster","tmap","maptools","tidyverse","broom","knitr",
"kableExtra","RColorBrewer", "spdep","gtools","readxl")
if(sum(as.numeric(!pacotes %in% installed.packages())) != 0){
instalador <- pacotes[!pacotes %in% installed.packages()]
for(i in 1:length(instalador)) {
install.packages(instalador, dependencies = T)
break()}
sapply(pacotes, require, character = T)
} else {
sapply(pacotes, require, character = T)
}
matrizW_distancias_linha <- nb2mat(vizinhos_distancias,
style = "W",
zero.policy = TRUE)
colnames(matrizW_distancias_linha) <- rownames(matrizW_distancias_linha)
listw_queen_dist <- mat2listw(matrizW_distancias)
moran.test(x = shp_pr_municipios@data$idhm_2010,
listw = listw_queen_dist,
zero.policy = TRUE)
# O Diagrama da Estatística I de Moran
moran.plot(x = shp_pr_municipios@data$idhm_2010,
listw = listw_queen_dist,
zero.policy = TRUE,
xlab = "IDH",
ylab = "IDH Espacialmente Defasado",
pch = 19)
moran.test(x = shp_pr_municipios@data$idhm_2010,
listw = listw_dist,
zero.policy = TRUE)
listw_queen_local <- mat2listw(matrizW_queen_linha)
# Considerando a variável idh do objeto PR_dados, podemos aferir sua Estatística
# Moran Local, com o uso da função localmoran(), como se segue:
moran_local <- localmoran(x = shp_pr_municipios@data$idhm_2010,
listw = listw_queen_local,
zero.policy = TRUE)
moran_local_mapa <- cbind(shp_pr_municipios, moran_local)
quantile(moran_local_mapa@data$Ii, type = 5, probs = c(0,0.2,0.4,0.6,0.8))
moran_local_mapa@data <- moran_local_mapa@data %>%
mutate(faixa_quantis = factor(quantcut(x = Ii, q = 5)))
tm_shape(shp = moran_local_mapa) +
tm_fill(col = "faixa_quantis", palette = "-magma") +
tm_borders()
attr(x = moran_local, which = "quadr")
moran_local_mapa <- cbind(moran_local_mapa,
attr(x = moran_local, which = "quadr")[1])
tm_shape(shp = moran_local_mapa) +
tm_fill(col = "mean", palette = "-viridis") +
tm_borders(col = "gray")
quadrantes <- vector(mode = "numeric", length = nrow(moran_local))
centro_idh <- shp_pr_municipios@data$idhm_2010 - mean(shp_pr_municipios@data$idhm_2010)
centro_moran_local <- moran_local[,1] - mean(moran_local[,1])
sig <- 0.05
quadrantes[centro_idh > 0 & centro_moran_local > 0] <- "HH"
quadrantes[centro_idh > 0 & centro_moran_local < 0] <- "HL"
quadrantes[centro_idh < 0 & centro_moran_local > 0] <- "LH"
quadrantes[centro_idh < 0 & centro_moran_local < 0] <- "LL"
quadrantes[moran_local[,5] > sig] <- "Estatisticamente_nao_significante"
moran_local_mapa@data["quadrantes"] <- factor(quadrantes)
tm_shape(shp = moran_local_mapa) +
tm_polygons(col = "quadrantes",
pal = c(HH = "darkred",
HL = "red",
LH = "lightblue",
LL = "darkblue",
Estatisticamente_nao_significante = "white")) +
tm_borders()
tm_shape(shp = moran_local_mapa, bbox = bbox_new) +
tm_polygons(col = "quadrantes",
pal = c(HH = "darkred",
HL = "red",
LH = "lightblue",
LL = "darkblue",
Estatisticamente_nao_significante = "white")) +
tm_layout(legend.position = c("right", "top"),
title= 'IDHM 2010 Paraná: Moran Local',
title.position = c('right', 'top'))+
tm_borders()
# make some bbox magic
bbox_new <- st_bbox(moran_local_mapa) # current bounding box
xrange <- bbox_new$xmax - bbox_new$xmin # range of x values
yrange <- bbox_new$ymax - bbox_new$ymin # range of y values
# bbox_new[1] <- bbox_new[1] - (0.25 * xrange) # xmin - left
bbox_new[3] <- bbox_new[3] + (0.25 * xrange) # xmax - right
# bbox_new[2] <- bbox_new[2] - (0.25 * yrange) # ymin - bottom
bbox_new[4] <- bbox_new[4] + (0.2 * yrange) # ymax - top
bbox_new <- bbox_new %>%  # take the bounding box ...
st_as_sfc() # ... and make it a sf polygon
tm_shape(shp = moran_local_mapa, bbox = bbox_new) +
tm_polygons(col = "quadrantes",
pal = c(HH = "darkred",
HL = "red",
LH = "lightblue",
LL = "darkblue",
Estatisticamente_nao_significante = "white")) +
tm_layout(legend.position = c("right", "top"),
title= 'IDHM 2010 Paraná: Moran Local',
title.position = c('right', 'top'))+
tm_borders()
listw_queen_dist_2 <- mat2listw(matrizW_distancias_linha)
# Considerando a variável idh do objeto PR_dados, podemos aferir sua Estatística
# Moran Local, com o uso da função localmoran(), como se segue:
moran_local <- localmoran(x = shp_pr_municipios@data$idhm_2010,
listw = listw_queen_dist_2,
zero.policy = TRUE)
moran_local_mapa2 <- cbind(shp_pr_municipios, moran_local)
quantile(moran_local_mapa2@data$Ii, type = 5, probs = c(0,0.2,0.4,0.6,0.8))
moran_local_mapa2@data <- moran_local_mapa2@data %>%
mutate(faixa_quantis = factor(quantcut(x = Ii, q = 5)))
tm_shape(shp = moran_local_mapa2) +
tm_fill(col = "faixa_quantis", palette = "-magma") +
tm_borders()
moran_local_mapa2 <- cbind(moran_local_mapa2,
attr(x = moran_local, which = "quadr")[1])
tm_shape(shp = moran_local_mapa2) +
tm_fill(col = "mean", palette = "-viridis") +
tm_borders(col = "gray")
moran_local_mapa2@data["quadrantes"] <- factor(quadrantes)
tm_shape(shp = moran_local_mapa2) +
tm_polygons(col = "quadrantes",
pal = c(HH = "darkred",
HL = "red",
LH = "lightblue",
LL = "darkblue",
Estatisticamente_nao_significante = "white")) +
tm_borders()
tm_shape(shp = moran_local_mapa2, bbox = bbox_new) +
tm_polygons(col = "quadrantes",
pal = c(HH = "darkred",
HL = "red",
LH = "lightblue",
LL = "darkblue",
Estatisticamente_nao_significante = "white")) +
tm_layout(legend.position = c("right", "top"),
title= 'IDHM 2010 Paraná: Moran Local',
title.position = c('right', 'top'))+
tm_borders()
tm_shape(shp = moran_local_mapa2, bbox = bbox_new) +
tm_polygons(col = "quadrantes",
pal = c(HH = "darkred",
HL = "red",
LH = "lightblue",
LL = "darkblue",
Estatisticamente_nao_significante = "white")) +
tm_layout(legend.position = c("right", "top"),
title= 'IDHM 2010 Paraná: Moran Local (distância)',
title.position = c('right', 'top'))+
tm_borders()
moran.test(x = shp_pr_municipios@data$idhm_2010,
listw = listw_queen_dist,
zero.policy = TRUE)
# O Diagrama da Estatística I de Moran
moran.plot(x = shp_pr_municipios@data$idhm_2010,
listw = listw_queen_dist,
zero.policy = TRUE,
xlab = "IDH",
ylab = "IDH Espacialmente Defasado",
pch = 19)
tm_shape(shp = moran_local_mapa2, bbox = bbox_new) +
tm_polygons(col = "quadrantes",
pal = c(HH = "darkred",
HL = "red",
LH = "lightblue",
LL = "darkblue",
Estatisticamente_nao_significante = "white")) +
tm_layout(legend.position = c("right", "top"),
title= 'IDHM 2010 Paraná: Moran Local (distância)',
title.position = c('right', 'top'))+
tm_borders()
pacotes <- c("rgdal","raster","tmap","maptools","tidyverse","broom","knitr",
"kableExtra","RColorBrewer", "spdep","gtools","readxl")
if(sum(as.numeric(!pacotes %in% installed.packages())) != 0){
instalador <- pacotes[!pacotes %in% installed.packages()]
for(i in 1:length(instalador)) {
install.packages(instalador, dependencies = T)
break()}
sapply(pacotes, require, character = T)
} else {
sapply(pacotes, require, character = T)
}
# Considerando a variável idh do objeto PR_dados, podemos aferir sua Estatística
# Moran Local, com o uso da função localmoran(), como se segue:
moran_local_dist <- localmoran(x = shp_pr_municipios@data$idhm_2010,
listw = listw_queen_dist_2,
zero.policy = TRUE)
moran_local_mapa_dist <- cbind(shp_pr_municipios, moran_local_dist)
quantile(moran_local_mapa_dist@data$Ii, type = 5, probs = c(0,0.2,0.4,0.6,0.8))
moran_local_mapa_dist@data <- moran_local_mapa_dist@data %>%
mutate(faixa_quantis = factor(quantcut(x = Ii, q = 5)))
moran_local_mapa_dist <- cbind(moran_local_mapa_dist,
attr(x = moran_local_dist, which = "quadr")[1])
quadrantes_dist <- vector(mode = "numeric", length = nrow(moran_local_dist))
centro_idh_dist <- shp_pr_municipios@data$idhm_2010 - mean(shp_pr_municipios@data$idhm_2010)
centro_moran_local_dist <- moran_local_dist[,1] - mean(moran_local_dist[,1])
quadrantes[centro_idh_dist > 0 & centro_moran_local_dist > 0] <- "HH"
quadrantes[centro_idh_dist > 0 & centro_moran_local_dist < 0] <- "HL"
quadrantes[centro_idh_dist < 0 & centro_moran_local_dist > 0] <- "LH"
quadrantes[centro_idh_dist < 0 & centro_moran_local_dist < 0] <- "LL"
quadrantes_dist[moran_local_dist[,5] > sig] <- "Estatisticamente_nao_significante"
moran_local_mapa_dist@data["quadrantes_dist"] <- factor(quadrantes_dist)
tm_shape(shp = moran_local_mapa_dist) +
tm_polygons(col = "quadrantes_dist",
pal = c(HH = "darkred",
HL = "red",
LH = "lightblue",
LL = "darkblue",
Estatisticamente_nao_significante = "white")) +
tm_borders()
# make some bbox magic
bbox_new_dist <- st_bbox(moran_local_mapa_dist) # current bounding box
xrange_dist <- bbox_new_dist$xmax - bbox_new_dist$xmin # range of x values
yrange_dist <- bbox_new_dist$ymax - bbox_new_dist$ymin # range of y values
# bbox_new[1] <- bbox_new[1] - (0.25 * xrange) # xmin - left
bbox_new_dist[3] <- bbox_new_dist[3] + (0.25 * xrange_dist) # xmax - right
# bbox_new[2] <- bbox_new[2] - (0.25 * yrange) # ymin - bottom
bbox_new_dist[4] <- bbox_new_dist[4] + (0.2 * yrange_dist) # ymax - top
bbox_new_dist <- bbox_new_dist %>%  # take the bounding box ...
st_as_sfc() # ... and make it a sf polygon
tm_shape(shp = moran_local_mapa_dist, bbox = bbox_new_dist) +
tm_polygons(col = "quadrantes_dist",
pal = c(HH = "darkred",
HL = "red",
LH = "lightblue",
LL = "darkblue",
Estatisticamente_nao_significante = "white")) +
tm_layout(legend.position = c("right", "top"),
title= 'IDHM 2010 Paraná: Moran Local (distância)',
title.position = c('right', 'top'))+
tm_borders()
pacotes <- c("rgdal","raster","tmap","maptools","tidyverse","broom","knitr",
"kableExtra","RColorBrewer", "spdep","gtools","readxl")
if(sum(as.numeric(!pacotes %in% installed.packages())) != 0){
instalador <- pacotes[!pacotes %in% installed.packages()]
for(i in 1:length(instalador)) {
install.packages(instalador, dependencies = T)
break()}
sapply(pacotes, require, character = T)
} else {
sapply(pacotes, require, character = T)
}
shp_pr_municipios <- readOGR(dsn = "PR_Municipios_2020",
layer = "PR_Municipios_2020",
encoding = "UTF8",
use_iconv = TRUE)
vizinhos_distancias <- dnearneigh(coordinates(shp_pr_municipios),
d1 = 0,
d2 = 60,
longlat = TRUE)
rm(vizinhos_distancias)
vizinhos_queen <- dnearneigh(coordinates(shp_pr_municipios),
d1 = 0,
d2 = 60,
longlat = TRUE)
plot(vizinhos_queen,
coordinates(shp_pr_municipios),
add = TRUE,
col = "#33638DFF")
plot(shp_pr_municipios)
plot(vizinhos_queen,
coordinates(shp_pr_municipios),
add = TRUE,
col = "#33638DFF")
summary(vizinhos_queen)
matrizW_queen <- nb2mat(neighbours = vizinhos_queen,
style = "B",
zero.policy = TRUE)
colnames(matrizW_queen) <- shp_pr_municipios@data$NM_MUN
matrizW_queen_linha <- nb2mat(vizinhos_queen,
style = "W",
zero.policy = TRUE)
colnames(matrizW_queen_linha) <- rownames(matrizW_queen_linha)
listw_queen <- mat2listw(matrizW_queen)
class(listw_queen)
dados_pr <- read_excel("idh_municipios_pr.xlsx")
dados_pr <- dados_pr %>% rename(CD_MUN = CÓDIGO,
NM_MUN = MUNICÍPIO,
idhm_1991 = "IDHM 1991",
idhm_educ_1991 = "IDHM - Dimensão Educação 1991",
idhm_long_1991 = "IDHM  - Dimensão Longevidade 1991",
idhm_renda_1991 = "IDHM - Dimensão Renda 1991",
ranking_1991 = "Ranking \r\nno estado 1991",
idhm_2000 = "IDHM 2000",
idhm_educ_2000 = "IDHM - Dimensão Educação 2000",
idhm_long_2000 = `IDHM - Dimensão Longevidade 2000`,
idhm_renda_2000 = "IDHM - Dimensão Renda 2000",
ranking_2000 = "Ranking \r\nno estado 2000",
idhm_2010 = "IDHM 2010",
idhm_educ_2010 = "IDHM - Dimensão Educação 2010",
idhm_long_2010 = "IDHM  - Dimensão Longevidade 2010",
idhm_renda_2010 = "IDHM - Dimensão Renda 2010",
ranking_2010 = "Ranking \r\nno estado 2010")
dados_pr$CD_MUN <- as.character(dados_pr$CD_MUN)
dados_pr <- dados_pr %>% select(1, 3:17)
shp_pr_municipios@data %>%
left_join(dados_pr, by = "CD_MUN") -> shp_pr_municipios@data
h
# Verificando o join:
shp_pr_municipios@data %>%
kable() %>%
kable_styling(bootstrap_options = "striped",
full_width = TRUE,
font_size = 12)
moran.test(x = shp_pr_municipios@data$idhm_2010,
listw = listw_queen,
zero.policy = TRUE)
# O Diagrama da Estatística I de Moran
moran.plot(x = shp_pr_municipios@data$idhm_2010,
listw = listw_queen,
zero.policy = TRUE,
xlab = "IDH",
ylab = "IDH Espacialmente Defasado",
pch = 19)
matrizW_queen_linha <- nb2mat(vizinhos_queen,
style = "W",
zero.policy = TRUE)
listw_queen_local <- mat2listw(matrizW_queen_linha)
# Considerando a variável idh do objeto PR_dados, podemos aferir sua Estatística
# Moran Local, com o uso da função localmoran(), como se segue:
moran_local <- localmoran(x = shp_pr_municipios@data$idhm_2010,
listw = listw_queen_local,
zero.policy = TRUE)
moran_local_mapa <- cbind(shp_pr_municipios, moran_local)
quantile(moran_local_mapa@data$Ii, type = 5, probs = c(0,0.2,0.4,0.6,0.8))
moran_local_mapa@data <- moran_local_mapa@data %>%
mutate(faixa_quantis = factor(quantcut(x = Ii, q = 5)))
tm_shape(shp = moran_local_mapa) +
tm_fill(col = "faixa_quantis", palette = "-magma") +
tm_borders()
attr(x = moran_local, which = "quadr")
moran_local_mapa <- cbind(moran_local_mapa,
attr(x = moran_local, which = "quadr")[1])
quadrantes <- vector(mode = "numeric", length = nrow(moran_local))
centro_idh <- shp_pr_municipios@data$idhm_2010 - mean(shp_pr_municipios@data$idhm_2010)
centro_moran_local <- moran_local[,1] - mean(moran_local[,1])
sig <- 0.05
quadrantes[centro_idh > 0 & centro_moran_local > 0] <- "HH"
quadrantes[centro_idh > 0 & centro_moran_local < 0] <- "HL"
quadrantes[centro_idh < 0 & centro_moran_local > 0] <- "LH"
quadrantes[centro_idh < 0 & centro_moran_local < 0] <- "LL"
quadrantes[moran_local[,5] > sig] <- "Estatisticamente_nao_significante"
moran_local_mapa@data["quadrantes"] <- factor(quadrantes)
tm_shape(shp = moran_local_mapa) +
tm_polygons(col = "quadrantes",
pal = c(HH = "darkred",
HL = "red",
LH = "lightblue",
LL = "darkblue",
Estatisticamente_nao_significante = "white")) +
tm_borders()
# make some bbox magic
bbox_new <- st_bbox(moran_local_mapa) # current bounding box
xrange <- bbox_new$xmax - bbox_new$xmin # range of x values
yrange <- bbox_new$ymax - bbox_new$ymin # range of y values
# bbox_new[1] <- bbox_new[1] - (0.25 * xrange) # xmin - left
bbox_new[3] <- bbox_new[3] + (0.25 * xrange) # xmax - right
# bbox_new[2] <- bbox_new[2] - (0.25 * yrange) # ymin - bottom
bbox_new[4] <- bbox_new[4] + (0.2 * yrange) # ymax - top
bbox_new <- bbox_new %>%  # take the bounding box ...
st_as_sfc() # ... and make it a sf polygon
tm_shape(shp = moran_local_mapa, bbox = bbox_new) +
tm_polygons(col = "quadrantes",
pal = c(HH = "darkred",
HL = "red",
LH = "lightblue",
LL = "darkblue",
Estatisticamente_nao_significante = "white")) +
tm_layout(legend.position = c("right", "top"),
title= 'IDHM 2010 Paraná: Moran Local',
title.position = c('right', 'top'))+
tm_borders()
tm_shape(shp = moran_local_mapa, bbox = bbox_new) +
tm_polygons(col = "quadrantes",
pal = c(HH = "darkred",
HL = "red",
LH = "lightblue",
LL = "darkblue",
Estatisticamente_nao_significante = "white")) +
tm_layout(legend.position = c("right", "top"),
title= 'IDHM 2010 Paraná: Moran Local (vizinhança por distância 60km)',
title.position = c('right', 'top'))+
tm_borders()
